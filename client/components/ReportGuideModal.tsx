import React from "react";
import {
  X,
  Phone,
  Users,
  Building,
  AlertTriangle,
  Clock,
  FileText,
} from "lucide-react";
import { Button } from "@/components/ui/button";

interface ReportGuideModalProps {
  isOpen: boolean;
  onClose: () => void;
}

export default function ReportGuideModal({
  isOpen,
  onClose,
}: ReportGuideModalProps) {
  if (!isOpen) return null;

  const reportSteps = [
    {
      icon: Users,
      title: "1. Nh·ªù Ng∆∞·ªùi Th√¢n H·ªó Tr·ª£",
      description: "Kh√¥ng ƒëi m·ªôt m√¨nh, h√£y nh·ªù gia ƒë√¨nh ho·∫∑c b·∫°n b√® ƒëi c√πng",
      details: [
        "K·ªÉ l·∫°i chi ti·∫øt s·ª± vi·ªác v·ªõi ng∆∞·ªùi th√¢n",
        "Nh·ªù h·ªç ƒëi c√πng ƒë·∫øn c∆° quan ch·ª©c nƒÉng",
        "C√≥ ng∆∞·ªùi l√†m ch·ª©ng s·∫Ω c√≥ l·ª£i cho vi·ªác ƒëi·ªÅu tra",
      ],
      color: "bg-blue-100 text-blue-700 border-blue-200",
    },
    {
      icon: Phone,
      title: "2. G·ªçi Hotline Kh·∫©n C·∫•p",
      description: "G·ªçi ngay ƒë·ªÉ ƒë∆∞·ª£c h∆∞·ªõng d·∫´n chi ti·∫øt",
      details: [
        "üìû C√¥ng an: 113 (mi·ªÖn ph√≠, 24/7)",
        "üèõÔ∏è S·ªë ƒëi·ªán tho·∫°i ƒë·ªìn c√¥ng an ƒë·ªãa ph∆∞∆°ng",
        "üí∞ Ng√¢n h√†ng (n·∫øu li√™n quan ƒë·∫øn t√†i kho·∫£n)",
        "üì± Nh√† m·∫°ng (n·∫øu b·ªã l·ª´a qua tin nh·∫Øn/cu·ªôc g·ªçi)",
      ],
      color: "bg-red-100 text-red-700 border-red-200",
    },
    {
      icon: Building,
      title: "3. ƒê·∫øn ƒê·ªìn C√¥ng An",
      description: "Tr√¨nh b√°o tr·ª±c ti·∫øp t·∫°i c∆° quan c√¥ng an g·∫ßn nh·∫•t",
      details: [
        "Mang theo CMND/CCCD v√† c√°c gi·∫•y t·ªù li√™n quan",
        "Chu·∫©n b·ªã s·∫µn c√°c b·∫±ng ch·ª©ng (tin nh·∫Øn, cu·ªôc g·ªçi, chuy·ªÉn kho·∫£n)",
        "K·ªÉ l·∫°i s·ª± vi·ªác m·ªôt c√°ch chi ti·∫øt v√† trung th·ª±c",
        "Y√™u c·∫ßu bi√™n b·∫£n v√† s·ªë h·ªì s∆° v·ª• vi·ªác",
      ],
      color: "bg-green-100 text-green-700 border-green-200",
    },
  ];

  const importantNotes = [
    {
      icon: Clock,
      title: "Th·ªùi Gian V√†ng",
      content:
        "B√°o c√°o c√†ng s·ªõm c√†ng t·ªët, trong v√≤ng 24h ƒë·∫ßu ƒë·ªÉ tƒÉng kh·∫£ nƒÉng truy t√¨m",
    },
    {
      icon: FileText,
      title: "B·∫±ng Ch·ª©ng",
      content: "L∆∞u gi·ªØ t·∫•t c·∫£ tin nh·∫Øn, cu·ªôc g·ªçi, email, v√† l·ªãch s·ª≠ giao d·ªãch",
    },
    {
      icon: AlertTriangle,
      title: "Kh√¥ng T·ª± √ù",
      content: "Kh√¥ng t·ª± li√™n h·ªá v·ªõi k·∫ª l·ª´a ƒë·∫£o hay theo ƒëu·ªïi v·ª• vi·ªác m·ªôt m√¨nh",
    },
  ];

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto animate-slide-up">
        {/* Header */}
        <div className="bg-gradient-to-r from-red-600 to-orange-600 text-white p-6 rounded-t-lg">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <AlertTriangle className="h-8 w-8 animate-warning-glow" />
              <div>
                <h2 className="text-2xl font-bold">H∆∞·ªõng D·∫´n T·ªë C√°o L·ª´a ƒê·∫£o</h2>
                <p className="text-red-100">
                  C√°c b∆∞·ªõc c·ª• th·ªÉ ƒë·ªÉ b√°o c√°o v·ªõi c∆° quan ch·ª©c nƒÉng
                </p>
              </div>
            </div>
            <button
              onClick={onClose}
              className="text-white hover:text-red-200 transition-colors p-1"
            >
              <X className="h-6 w-6" />
            </button>
          </div>
        </div>

        {/* Content */}
        <div className="p-6">
          {/* Important Warning */}
          <div className="bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-6">
            <div className="flex items-start space-x-3">
              <AlertTriangle className="h-6 w-6 text-yellow-600 mt-1 flex-shrink-0" />
              <div>
                <h3 className="text-lg font-semibold text-yellow-800">
                  ‚ö†Ô∏è L∆ØU √ù QUAN TR·ªåNG
                </h3>
                <p className="text-yellow-700 mt-1">
                  Website n√†y ch·ªâ h∆∞·ªõng d·∫´n c√°ch b√°o c√°o. ƒê·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ ch√≠nh
                  th·ª©c, b·∫°n ph·∫£i li√™n h·ªá tr·ª±c ti·∫øp v·ªõi c∆° quan ch·ª©c nƒÉng.
                </p>
              </div>
            </div>
          </div>

          {/* Steps */}
          <div className="space-y-6 mb-8">
            <h3 className="text-xl font-bold text-gray-800 text-center">
              3 B∆∞·ªõc B√°o C√°o L·ª´a ƒê·∫£o Hi·ªáu Qu·∫£
            </h3>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              {reportSteps.map((step, index) => (
                <div
                  key={index}
                  className={`border rounded-lg p-4 ${step.color}`}
                >
                  <div className="flex items-start space-x-3 mb-3">
                    <step.icon className="h-8 w-8 mt-1 flex-shrink-0" />
                    <div>
                      <h4 className="font-bold text-lg">{step.title}</h4>
                      <p className="text-sm opacity-90">{step.description}</p>
                    </div>
                  </div>
                  <ul className="space-y-2">
                    {step.details.map((detail, idx) => (
                      <li
                        key={idx}
                        className="text-sm flex items-start space-x-2"
                      >
                        <span className="text-xs mt-1">‚Ä¢</span>
                        <span>{detail}</span>
                      </li>
                    ))}
                  </ul>
                </div>
              ))}
            </div>
          </div>

          {/* Important Notes */}
          <div className="bg-gray-50 rounded-lg p-6 mb-6">
            <h3 className="text-lg font-bold text-gray-800 mb-4 text-center">
              üìã ƒêi·ªÅu C·∫ßn Nh·ªõ
            </h3>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              {importantNotes.map((note, index) => (
                <div
                  key={index}
                  className="flex items-start space-x-3 bg-white p-4 rounded border"
                >
                  <note.icon className="h-6 w-6 text-blue-600 mt-1 flex-shrink-0" />
                  <div>
                    <h4 className="font-semibold text-gray-800">
                      {note.title}
                    </h4>
                    <p className="text-sm text-gray-600 mt-1">{note.content}</p>
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* Emergency Contacts */}
          <div className="bg-red-50 border border-red-200 rounded-lg p-4">
            <h3 className="text-lg font-bold text-red-800 mb-3 text-center">
              üÜò Li√™n H·ªá Kh·∫©n C·∫•p
            </h3>
            <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 text-center">
              <div className="bg-white p-4 rounded border border-red-200">
                <Phone className="h-8 w-8 text-red-600 mx-auto mb-2" />
                <h4 className="font-bold text-red-800">C√¥ng An</h4>
                <p className="text-2xl font-bold text-red-600">113</p>
                <p className="text-sm text-red-600">Mi·ªÖn ph√≠ - 24/7</p>
              </div>
              <div className="bg-white p-4 rounded border border-red-200">
                <Building className="h-8 w-8 text-red-600 mx-auto mb-2" />
                <h4 className="font-bold text-red-800">ƒê·ªìn C√¥ng An</h4>
                <p className="text-sm text-red-600">ƒê·ªãa ph∆∞∆°ng g·∫ßn nh·∫•t</p>
                <p className="text-sm text-red-600">T√¨m qua Google Maps</p>
              </div>
            </div>
          </div>
        </div>

        {/* Footer */}
        <div className="bg-gray-50 px-6 py-4 rounded-b-lg flex justify-center">
          <Button
            onClick={onClose}
            className="bg-gradient-to-r from-red-600 to-red-700 hover:from-red-700 hover:to-red-800 text-white px-8"
          >
            T√¥i ƒë√£ hi·ªÉu - ƒê√≥ng h∆∞·ªõng d·∫´n
          </Button>
        </div>
      </div>
    </div>
  );
}
