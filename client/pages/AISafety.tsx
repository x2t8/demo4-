import {
  Bot,
  Brain,
  Eye,
  Shield,
  AlertTriangle,
  CheckCircle,
  XCircle,
  Zap,
  Camera,
  Mic,
  FileText,
  Search,
  Target,
  Lightbulb,
  Users,
  Globe,
  Sparkles,
  TrendingUp,
  Play,
  Star,
  Bookmark,
  Share2,
} from "lucide-react";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import Header from "@/components/Header";
import DisclaimerBanner from "@/components/DisclaimerBanner";
import { useState } from "react";

export default function AISafety() {
  const [selectedApplication, setSelectedApplication] = useState<string | null>(null);
  const [activeDemo, setActiveDemo] = useState<string | null>(null);
  const [showAIToolsModal, setShowAIToolsModal] = useState<boolean>(false);

  const aiTools = {
    "üìπ VIDEO": [
      "11 Labs", "Veed", "Descript", "Capcut",
      "Suno", "Fliki", "Shuffll", "HeyGen"
    ],
    "üé® THI·∫æT K·∫æ": [
      "Midjourney", "Canva AI", "Adobe Firefly", "DALLE-2",
      "Playground", "Leonardo", "Ideogram", "Figma AI"
    ],
    "‚úçÔ∏è VI·∫æT CONTENT": [
      "ChatGPT", "Claude", "Notion AI", "Jenni AI",
      "Grammarly", "Copilot", "Google Gemini", "HyperWrite"
    ],
    "ü§ñ CHATBOT": [
      "Chatbase", "Tidio", "Intercom", "Drift",
      "ManyChat", "Botsify", "Landbot", "Collect.chat"
    ],
    "üìà MARKETING": [
      "Jasper", "Copy.ai", "Writesonic", "AdCreative",
      "Semrush", "Hootsuite AI", "Buffer AI", "Sprout Social"
    ],
    "‚ö° NƒÇNG SU·∫§T": [
      "Notion AI", "Calendly AI", "Zapier", "IFTTT",
      "Todoist", "ClickUp AI", "Slack AI", "Microsoft 365 AI"
    ]
  };

  const aiApplications = [
    {
      id: "chatbot",
      icon: Bot,
      title: "Chatbot & AI Assistant",
      description: "ChatGPT, Gemini, Claude - Tr·ª£ l√Ω AI th√¥ng minh",
      popularity: "92%",
      safety: "78%",
      color: "text-blue-600",
      bg: "bg-blue-100",
      benefits: [
        "H·ªó tr·ª£ h·ªçc t·∫≠p v√† nghi√™n c·ª©u",
        "Vi·∫øt v√† ch·ªânh s·ª≠a vƒÉn b·∫£n",
        "Gi·∫£i ƒë√°p th·∫Øc m·∫Øc nhanh ch√≥ng",
        "Brainstorming √Ω t∆∞·ªüng",
      ],
      risks: [
        "Th√¥ng tin c√≥ th·ªÉ kh√¥ng ch√≠nh x√°c",
        "Thi·∫øu suy nghƒ© ph·∫£n bi·ªán",
        "Ph·ª• thu·ªôc qu√° m·ª©c v√†o AI",
        "Vi ph·∫°m b·∫£n quy·ªÅn n·∫øu sao ch√©p",
      ],
      tips: [
        "Lu√¥n ki·ªÉm tra th√¥ng tin t·ª´ AI",
        "S·ª≠ d·ª•ng AI nh∆∞ c√¥ng c·ª• h·ªó tr·ª£, kh√¥ng thay th·∫ø",
        "Kh√¥ng chia s·∫ª th√¥ng tin nh·∫°y c·∫£m",
        "Ghi nh·∫≠n ngu·ªìn khi s·ª≠ d·ª•ng AI",
      ],
    },
    {
      id: "image",
      icon: Camera,
      title: "AI T·∫°o H√¨nh ·∫¢nh",
      description: "Midjourney, DALL-E, Stable Diffusion",
      popularity: "85%",
      safety: "65%",
      color: "text-purple-600",
      bg: "bg-purple-100",
      benefits: [
        "T·∫°o artwork v√† illustration",
        "Design ƒë·ªì h·ªça nhanh ch√≥ng",
        "Concept art v√† prototype",
        "Gi√°o d·ª•c v√† gi·∫£i tr√≠",
      ],
      risks: [
        "Deepfake v√† h√¨nh ·∫£nh gi·∫£",
        "Vi ph·∫°m b·∫£n quy·ªÅn h√¨nh ·∫£nh",
        "N·ªôi dung kh√¥ng ph√π h·ª£p",
        "Nh·∫ßm l·∫´n th·∫≠t-gi·∫£",
      ],
      tips: [
        "Ki·ªÉm tra ngu·ªìn g·ªëc h√¨nh ·∫£nh",
        "S·ª≠ d·ª•ng watermark khi c·∫ßn",
        "Kh√¥ng t·∫°o h√¨nh ·∫£nh c√≥ h·∫°i",
        "T√¥n tr·ªçng quy·ªÅn ri√™ng t∆∞ ng∆∞·ªùi kh√°c",
      ],
    },
    {
      id: "voice",
      icon: Mic,
      title: "AI Gi·ªçng N√≥i",
      description: "Text-to-speech, voice cloning, audio AI",
      popularity: "73%",
      safety: "55%",
      color: "text-orange-600",
      bg: "bg-orange-100",
      benefits: [
        "H·ªó tr·ª£ ng∆∞·ªùi khuy·∫øt t·∫≠t",
        "T·∫°o n·ªôi dung audio",
        "H·ªçc ngo·∫°i ng·ªØ",
        "Chatbot c√≥ gi·ªçng n√≥i",
      ],
      risks: [
        "Voice deepfake l·ª´a ƒë·∫£o",
        "Gi·∫£ m·∫°o gi·ªçng n√≥i ng∆∞·ªùi kh√°c",
        "Tin t·ª©c gi·∫£ v·ªõi √¢m thanh",
        "Qu·∫•y r·ªëi qua gi·ªçng n√≥i AI",
      ],
      tips: [
        "X√°c th·ª±c qua nhi·ªÅu k√™nh",
        "Nghi ng·ªù cu·ªôc g·ªçi l·∫°",
        "Kh√¥ng tin ho√†n to√†n v√†o gi·ªçng n√≥i",
        "B√°o c√°o n·∫øu g·∫∑p voice deepfake",
      ],
    },
    {
      id: "search",
      icon: Search,
      title: "AI T√¨m Ki·∫øm & Ph√¢n T√≠ch",
      description: "AI-powered search, data analysis",
      popularity: "88%",
      safety: "82%",
      color: "text-green-600",
      bg: "bg-green-100",
      benefits: [
        "T√¨m ki·∫øm th√¥ng tin ch√≠nh x√°c",
        "Ph√¢n t√≠ch d·ªØ li·ªáu ph·ª©c t·∫°p",
        "T√≥m t·∫Øt n·ªôi dung d√†i",
        "D·ªãch thu·∫≠t t·ª± ƒë·ªông",
      ],
      risks: [
        "Bias trong k·∫øt qu·∫£ t√¨m ki·∫øm",
        "Th√¥ng tin thi√™n l·ªách",
        "Filter bubble effect",
        "M·∫•t kh·∫£ nƒÉng t∆∞ duy ƒë·ªôc l·∫≠p",
      ],
      tips: [
        "So s√°nh nhi·ªÅu ngu·ªìn th√¥ng tin",
        "T√¨m hi·ªÉu c√°ch AI ho·∫°t ƒë·ªông",
        "ƒê·∫∑t c√¢u h·ªèi ph·∫£n bi·ªán",
        "Gi·ªØ th√≥i quen suy nghƒ© ƒë·ªôc l·∫≠p",
      ],
    },
  ];

  return (
    <div className="min-h-screen bg-gray-50 dark:bg-gray-900 md:bg-white page-fade-in">
      <Header />
      <DisclaimerBanner />

      {/* Desktop/Tablet: ScamTypes-style Header */}
      <div className="hidden md:block">
        {/* Hero Section - Exact Digital Ethics Layout */}
        <div className="relative bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-600 text-white py-20 overflow-hidden">
          <div className="absolute inset-0 bg-black opacity-10"></div>
          <div className="absolute inset-0 bg-gradient-to-b from-transparent to-black/20"></div>

          <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
              <div>
                <div className="flex items-center mb-6">
                  <Bot className="h-12 w-12 mr-4 animate-pulse" />
                  <span className="bg-blue-500 text-white px-3 py-1 rounded-full text-sm font-medium">
                    TRÔøΩÔøΩ√ç TU·ªÜ NH√ÇN T·∫†O AN TO√ÄN
                  </span>
                </div>
                <h1 className="text-5xl md:text-6xl font-bold mb-6 leading-tight">
                  AI Safety &{" "}
                  <span className="text-cyan-300">S·ª≠ D·ª•ng Th√¥ng Minh</span>
                </h1>
                <p className="text-xl opacity-90 mb-8 leading-relaxed">
                  Kh√°m ph√° t∆∞∆°ng lai c·ªßa AI trong th·∫ø gi·ªõi s·ªë hi·ªán ƒë·∫°i. H·ªçc c√°ch
                  s·ª≠ d·ª•ng c√¥ng ngh·ªá tr√≠ tu·ªá nh√¢n t·∫°o m·ªôt c√°ch an to√†n v√† c√≥ tr√°ch nhi·ªám.
                </p>
                <div className="flex items-center space-x-6">
                  <div className="text-center">
                    <div className="text-3xl font-bold text-cyan-300">
                      85%
                    </div>
                    <div className="text-sm opacity-80">
                      Ng∆∞·ªùi d√πng AI
                    </div>
                  </div>
                  <div className="w-px h-12 bg-white/30"></div>
                  <div className="text-center">
                    <div className="text-3xl font-bold text-cyan-300">
                      42%
                    </div>
                    <div className="text-sm opacity-80">
                      R·ªßi ro b·∫£o m·∫≠t
                    </div>
                  </div>
                  <div className="w-px h-12 bg-white/30"></div>
                  <div className="text-center">
                    <div className="text-3xl font-bold text-cyan-300">
                      95%
                    </div>
                    <div className="text-sm opacity-80">C·∫ßn h·ªçc c√°ch d√πng</div>
                  </div>
                </div>
              </div>

              <div className="relative">
                <div className="grid grid-cols-2 gap-4">
                  {aiApplications.slice(0, 4).map((app, index) => (
                    <Card
                      key={app.id}
                      className={`transform hover:scale-105 transition-all duration-300 hover:shadow-xl ${index % 2 === 1 ? "mt-8" : ""}`}
                    >
                      <CardContent className="p-4">
                        <div
                          className={`w-12 h-12 rounded-lg ${app.bg} flex items-center justify-center mb-3`}
                        >
                          <app.icon className={`h-6 w-6 ${app.color}`} />
                        </div>
                        <h3 className="font-bold text-gray-900 text-sm mb-2">
                          {app.title}
                        </h3>
                        <div className="space-y-2">
                          <div className="flex items-center justify-between">
                            <span className="text-xs text-gray-600">
                              Ph·ªï bi·∫øn
                            </span>
                            <span className={`text-xs font-semibold ${app.color}`}>
                              {app.popularity}
                            </span>
                          </div>
                          <Progress
                            value={parseInt(app.popularity)}
                            className="h-1"
                          />
                        </div>
                      </CardContent>
                    </Card>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* AI Applications Grid */}
        <section className="px-4 py-16 bg-gray-50">
          <div className="container mx-auto max-w-6xl">
            <h2 className="text-2xl font-bold text-center mb-3 text-gray-900">
              ·ª®ng d·ª•ng AI ph·ªï bi·∫øn
            </h2>
            <div className="flex justify-center gap-6 mb-12 text-sm flex-wrap">
              <div className="flex items-center gap-2">
                <Bot className="w-4 h-4 text-blue-500" />
                <span>AI Chatbots</span>
              </div>
              <div className="flex items-center gap-2">
                <Camera className="w-4 h-4 text-purple-500" />
                <span>T·∫°o h√¨nh ·∫£nh</span>
              </div>
              <div className="flex items-center gap-2">
                <Mic className="w-4 h-4 text-orange-500" />
                <span>AI gi·ªçng n√≥i</span>
              </div>
              <div className="flex items-center gap-2">
                <Search className="w-4 h-4 text-green-500" />
                <span>T√¨m ki·∫øm AI</span>
              </div>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              {aiApplications.map((app, index) => (
                <Card
                  key={app.id}
                  className={`group cursor-pointer transition-all duration-300 hover:shadow-lg border-2 ${app.bg} border-gray-200 hover:border-gray-300`}
                  onClick={() => setSelectedApplication(selectedApplication === app.id ? null : app.id)}
                >
                  <CardContent className="p-6 text-center">
                    <div className="flex justify-center mb-4">
                      <div className={`w-16 h-16 rounded-2xl ${app.bg} border-2 border-white shadow-sm flex items-center justify-center`}>
                        <app.icon className={`h-8 w-8 ${app.color}`} />
                      </div>
                    </div>

                    <h3 className="font-bold text-gray-900 mb-2 text-sm leading-tight">
                      {app.title}
                    </h3>

                    <p className="text-gray-600 text-xs mb-3 leading-relaxed">
                      {app.description}
                    </p>

                    <div className="space-y-2 mb-4">
                      <div className="flex justify-between items-center text-xs">
                        <span className="text-gray-600">Ph·ªï bi·∫øn</span>
                        <span className={`font-semibold ${app.color}`}>
                          {app.popularity}
                        </span>
                      </div>
                      <div className="w-full bg-gray-200 rounded-full h-2">
                        <div
                          className={`h-2 rounded-full transition-all duration-1000 ${
                            app.color === "text-blue-600" ? "bg-blue-500" :
                            app.color === "text-purple-600" ? "bg-purple-500" :
                            app.color === "text-orange-600" ? "bg-orange-500" : "bg-green-500"
                          }`}
                          style={{ width: app.popularity }}
                        ></div>
                      </div>

                      <div className="flex justify-between items-center text-xs">
                        <span className="text-gray-600">An to√†n</span>
                        <span className={`font-semibold ${app.color}`}>
                          {app.safety}
                        </span>
                      </div>
                      <div className="w-full bg-gray-200 rounded-full h-2">
                        <div
                          className={`h-2 rounded-full transition-all duration-1000 ${
                            app.color === "text-blue-600" ? "bg-blue-500" :
                            app.color === "text-purple-600" ? "bg-purple-500" :
                            app.color === "text-orange-600" ? "bg-orange-500" : "bg-green-500"
                          }`}
                          style={{ width: app.safety }}
                        ></div>
                      </div>
                    </div>

                    {/* Expanded Details */}
                    {selectedApplication === app.id && (
                      <div className="mt-4 pt-4 border-t text-left space-y-3">
                        <div className="bg-green-50 rounded-lg p-3 border border-green-200">
                          <h4 className="font-semibold text-green-700 mb-2 flex items-center gap-1 text-xs">
                            <CheckCircle className="h-3 w-3" />
                            L·ª£i √≠ch
                          </h4>
                          <div className="space-y-1">
                            {app.benefits.slice(0, 2).map((benefit, idx) => (
                              <div key={idx} className="flex items-start gap-1 text-xs">
                                <span className="text-green-500 mt-0.5">‚úì</span>
                                <span className="text-gray-700">{benefit}</span>
                              </div>
                            ))}
                          </div>
                        </div>

                        <div className="bg-red-50 rounded-lg p-3 border border-red-200">
                          <h4 className="font-semibold text-red-700 mb-2 flex items-center gap-1 text-xs">
                            <XCircle className="h-3 w-3" />
                            R·ªßi ro
                          </h4>
                          <div className="space-y-1">
                            {app.risks.slice(0, 2).map((risk, idx) => (
                              <div key={idx} className="flex items-start gap-1 text-xs">
                                <span className="text-red-500 mt-0.5">‚Ä¢</span>
                                <span className="text-gray-700">{risk}</span>
                              </div>
                            ))}
                          </div>
                        </div>

                        <div className="flex gap-2">
                          <Button size="sm" variant="outline" className="flex-1 text-xs h-7">
                            <Bookmark className="h-3 w-3 mr-1" />
                            L∆∞u
                          </Button>
                          <Button size="sm" variant="outline" className="text-xs h-7 px-2">
                            <Share2 className="h-3 w-3" />
                          </Button>
                        </div>
                      </div>
                    )}
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        </section>


        {/* AI Ethics & Safety Guidelines */}
        <section className="py-16 bg-gradient-to-br from-indigo-50 to-purple-50">
          <div className="container mx-auto max-w-6xl px-4">
            <div className="text-center mb-12">
              <h2 className="text-3xl font-bold text-gray-900 mb-4">
                üõ°Ô∏è ƒê·∫°o ƒë·ª©c AI & H∆∞·ªõng d·∫´n an to√†n
              </h2>
              <p className="text-lg text-gray-600">Nguy√™n t·∫Øc s·ª≠ d·ª•ng AI c√≥ tr√°ch nhi·ªám</p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              {[
                {
                  icon: Shield,
                  title: "S·ª≠ d·ª•ng c√≥ tr√°ch nhi·ªám",
                  color: "blue",
                  principles: [
                    "Minh b·∫°ch v·ªÅ vi·ªác s·ª≠ d·ª•ng AI",
                    "Kh√¥ng t·∫°o n·ªôi dung c√≥ h·∫°i",
                    "T√¥n trÔøΩÔøΩng quy·ªÅn ri√™ng t∆∞",
                    "Kh√¥ng ph√¢n bi·ªát ƒë·ªëi x·ª≠",
                  ],
                },
                {
                  icon: Eye,
                  title: "Nh·∫≠n bi·∫øt AI content",
                  color: "purple",
                  principles: [
                    "Lu√¥n ki·ªÉm tra ngu·ªìn g·ªëc",
                    "T√¨m hi·ªÉu c√°c d·∫•u hi·ªáu AI",
                    "S·ª≠ d·ª•ng c√¥ng c·ª• detection",
                    "Gi√°o d·ª•c ng∆∞·ªùi kh√°c",
                  ],
                },
                {
                  icon: Brain,
                  title: "Gi·ªØ t∆∞ duy ph·∫£n bi·ªán",
                  color: "green",
                  principles: [
                    "ƒê·∫∑t c√¢u h·ªèi v·ªÅ th√¥ng tin AI",
                    "So s√°nh nhi·ªÅu ngu·ªìn",
                    "Ph√°t tri·ªÉn critical thinking",
                    "Kh√¥ng ph·ª• thu·ªôc ho√†n to√†n v√†o AI",
                  ],
                },
              ].map((ethics, index) => (
                <Card key={index} className="hover:shadow-lg transition-shadow bg-white border-0 shadow-md">
                  <CardContent className="p-8 text-center">
                    <div className={`w-16 h-16 mx-auto mb-6 rounded-2xl bg-${ethics.color}-100 flex items-center justify-center`}>
                      <ethics.icon className={`h-8 w-8 text-${ethics.color}-600`} />
                    </div>
                    <h3 className="text-xl font-bold text-gray-900 mb-6">{ethics.title}</h3>
                    <ul className="space-y-3 text-left">
                      {ethics.principles.map((principle, idx) => (
                        <li key={idx} className="flex items-start space-x-3">
                          <Zap className={`h-4 w-4 text-${ethics.color}-500 mt-1 flex-shrink-0`} />
                          <span className="text-gray-700 text-sm">{principle}</span>
                        </li>
                      ))}
                    </ul>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        </section>

        {/* Deepfake Detection Guide */}
        <section className="py-16 bg-white">
          <div className="container mx-auto max-w-6xl px-4">
            <div className="text-center mb-12">
              <h2 className="text-3xl font-bold text-gray-900 mb-4">
                üëÅÔ∏è Nh·∫≠n bi·∫øt Deepfake & N·ªôi dung AI
              </h2>
              <p className="text-lg text-gray-600">C√°c d·∫•u hi·ªáu ƒë·ªÉ ph√°t hi·ªán n·ªôi dung ƒë∆∞·ª£c t·∫°o b·ªüi AI</p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              {[
                {
                  type: "Video Deepfake",
                  icon: "üé•",
                  color: "red",
                  signs: [
                    "Chuy·ªÉn ƒë·ªông m·∫Øt kh√¥ng t·ª± nhi√™n",
                    "ƒê·ªìng b·ªô m√¥i-√¢m thanh k√©m",
                    "Ch·∫•t l∆∞·ª£ng ·∫£nh kh√¥ng ƒë·ªìng ƒë·ªÅu",
                    "√Ånh s√°ng v√† b√≥ng ƒë·ªï l·∫°",
                    "T√≥c v√† vi·ªÅn m·∫∑t m·ªù ·∫£o",
                  ],
                },
                {
                  type: "Audio Deepfake",
                  icon: "üîä",
                  color: "orange",
                  signs: [
                    "Gi·ªçng n√≥i m√°y m√≥c, thi·∫øu c·∫£m x√∫c",
                    "T·ªëc ƒë·ªô n√≥i kh√¥ng nh·∫•t qu√°n",
                    "√Çm thanh n·ªÅn b·∫•t th∆∞·ªùng",
                    "Ph√°t √¢m m·ªôt s·ªë t·ª´ k·ª≥ l·∫°",
                    "Ch·∫•t l∆∞·ª£ng √¢m thanh kh√°c bi·ªát",
                  ],
                },
                {
                  type: "Text AI-Generated",
                  icon: "üìù",
                  color: "blue",
                  signs: [
                    "VƒÉn phong qu√° ho√†n h·∫£o",
                    "Thi·∫øu c√° t√≠nh, c·∫£m x√∫c c√° nh√¢n",
                    "L·∫∑p l·∫°i c·∫•u tr√∫c c√¢u",
                    "Th√¥ng tin chung chung, m∆° h·ªì",
                    "Kh√¥ng c√≥ tr·∫£i nghi·ªám c·ª• th·ªÉ",
                  ],
                },
              ].map((detection, index) => (
                <Card key={index} className="h-full border-0 shadow-md hover:shadow-lg transition-shadow">
                  <CardHeader className="text-center pb-4">
                    <div className="text-4xl mb-2">{detection.icon}</div>
                    <Badge variant="outline" className={`mb-4 mx-auto border-${detection.color}-200 text-${detection.color}-700`}>
                      {detection.type}
                    </Badge>
                    <CardTitle className="text-xl">D·∫•u hi·ªáu nh·∫≠n bi·∫øt</CardTitle>
                  </CardHeader>
                  <CardContent className="pt-0">
                    <ul className="space-y-3">
                      {detection.signs.map((sign, idx) => (
                        <li key={idx} className="flex items-start space-x-3">
                          <Eye className={`h-4 w-4 text-${detection.color}-500 mt-1 flex-shrink-0`} />
                          <span className="text-gray-700 text-sm">{sign}</span>
                        </li>
                      ))}
                    </ul>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        </section>

        {/* AI for Students & Workers */}
        <section className="py-16 bg-gradient-to-br from-green-50 to-blue-50">
          <div className="container mx-auto max-w-6xl px-4">
            <div className="text-center mb-12">
              <h2 className="text-3xl font-bold text-gray-900 mb-4">
                üéì AI trong H·ªçc t·∫≠p & C√¥ng vi·ªác
              </h2>
              <p className="text-lg text-gray-600">H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng AI hi·ªáu qu·∫£ v√† c√≥ tr√°ch nhi·ªám</p>
            </div>

            <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
              {/* Students */}
              <Card className="border-0 shadow-lg">
                <CardHeader className="bg-gradient-to-r from-blue-500 to-purple-500 text-white rounded-t-lg">
                  <CardTitle className="text-xl flex items-center gap-2">
                    <span className="text-2xl">üéì</span>
                    H·ªçc sinh & Sinh vi√™n
                  </CardTitle>
                </CardHeader>
                <CardContent className="p-6">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                      <h4 className="font-semibold text-green-700 mb-3 flex items-center gap-2">
                        <CheckCircle className="h-4 w-4" />
                        ‚úÖ N√äN L√ÄM
                      </h4>
                      <ul className="space-y-2">
                        {[
                          "Brainstorming √Ω t∆∞·ªüng",
                          "Gi·∫£i th√≠ch kh√°i ni·ªám kh√≥",
                          "Luy·ªán t·∫≠p ng√¥n ng·ªØ",
                          "Ki·ªÉm tra ng·ªØ ph√°p",
                        ].map((item, idx) => (
                          <li key={idx} className="flex items-start gap-2 text-sm">
                            <CheckCircle className="h-3 w-3 text-green-500 mt-1 flex-shrink-0" />
                            <span className="text-gray-700">{item}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                    <div>
                      <h4 className="font-semibold text-red-700 mb-3 flex items-center gap-2">
                        <XCircle className="h-4 w-4" />
                        ‚ùå KH√îNG N√äN
                      </h4>
                      <ul className="space-y-2">
                        {[
                          "Copy nguy√™n vƒÉn b√†i AI vi·∫øt",
                          "L√†m b√†i t·∫≠p ho√†n to√†n b·∫±ng AI",
                          "N·ªôp b√†i kh√¥ng ghi ngu·ªìn AI",
                          "Tin ho√†n to√†n v√†o th√¥ng tin AI",
                        ].map((item, idx) => (
                          <li key={idx} className="flex items-start gap-2 text-sm">
                            <XCircle className="h-3 w-3 text-red-500 mt-1 flex-shrink-0" />
                            <span className="text-gray-700">{item}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                  </div>
                </CardContent>
              </Card>

              {/* Workers */}
              <Card className="border-0 shadow-lg">
                <CardHeader className="bg-gradient-to-r from-green-500 to-teal-500 text-white rounded-t-lg">
                  <CardTitle className="text-xl flex items-center gap-2">
                    <span className="text-2xl">üíº</span>
                    Ng∆∞·ªùi ƒëi l√†m
                  </CardTitle>
                </CardHeader>
                <CardContent className="p-6">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                      <h4 className="font-semibold text-blue-700 mb-3 flex items-center gap-2">
                        <Shield className="h-4 w-4" />
                        üõ°Ô∏è AN TO√ÄN
                      </h4>
                      <ul className="space-y-2">
                        {[
                          "Vi·∫øt email draft chuy√™n nghi·ªáp",
                          "T√≥m t·∫Øt meeting notes",
                          "Ph√¢n t√≠ch d·ªØ li·ªáu c∆° b·∫£n",
                          "T·∫°o presentation outline",
                        ].map((item, idx) => (
                          <li key={idx} className="flex items-start gap-2 text-sm">
                            <CheckCircle className="h-3 w-3 text-blue-500 mt-1 flex-shrink-0" />
                            <span className="text-gray-700">{item}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                    <div>
                      <h4 className="font-semibold text-orange-700 mb-3 flex items-center gap-2">
                        <AlertTriangle className="h-4 w-4" />
                        ‚ö†Ô∏è R·ª¶I RO
                      </h4>
                      <ul className="space-y-2">
                        {[
                          "Chia s·∫ª th√¥ng tin c√¥ng ty v·ªõi AI public",
                          "Tin ho√†n to√†n v√†o AI analysis",
                          "Thay th·∫ø ho√†n to√†n t∆∞ duy con ng∆∞·ªùi",
                          "Upload d·ªØ li·ªáu nh·∫°y c·∫£m l√™n AI",
                        ].map((item, idx) => (
                          <li key={idx} className="flex items-start gap-2 text-sm">
                            <AlertTriangle className="h-3 w-3 text-orange-500 mt-1 flex-shrink-0" />
                            <span className="text-gray-700">{item}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
        </section>

        {/* Human vs AI Content Comparison */}
        <section className="py-16 bg-white">
          <div className="container mx-auto max-w-6xl px-4">
            <div className="text-center mb-12">
              <h2 className="text-3xl font-bold text-gray-900 mb-4">
                üîç So s√°nh: N·ªôi dung Human vs AI
              </h2>
              <p className="text-lg text-gray-600">H·ªçc c√°ch ph√¢n bi·ªát n·ªôi dung do con ng∆∞·ªùi v√† AI t·∫°o ra</p>
            </div>

            <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
              {/* Human Content */}
              <Card className="border-2 border-green-200 shadow-lg">
                <CardHeader className="bg-gradient-to-r from-green-100 to-emerald-100 text-center">
                  <div className="w-20 h-20 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4">
                    <span className="text-3xl">üë§</span>
                  </div>
                  <CardTitle className="text-2xl text-green-800">HUMAN CONTENT</CardTitle>
                  <p className="text-green-600">NÔøΩÔøΩÔøΩi dung do con ng∆∞·ªùi t·∫°o</p>
                </CardHeader>
                <CardContent className="p-6">
                  <div className="space-y-4">
                    {[
                      { title: "C·∫£m x√∫c t·ª± nhi√™n", desc: "Th·ªÉ hi·ªán c·∫£m x√∫c ch√¢n th·ª±c, c√≥ chi·ªÅu s√¢u" },
                      { title: "Chi ti·∫øt c√° nh√¢n", desc: "C√≥ tr·∫£i nghi·ªám v√† c√¢u chuy·ªán ri√™ng" },
                      { title: "L·ªói nh·ªè b√¨nh th∆∞·ªùng", desc: "C√≥ th·ªÉ c√≥ l·ªói ch√≠nh t·∫£, ng·ªØ ph√°p nh·ªè" },
                      { title: "Phong c√°ch nh·∫•t qu√°n", desc: "Gi·ªØ ƒë∆∞·ª£c t√≠nh c√°ch v√† style ri√™ng" },
                      { title: "Context ph√π h·ª£p", desc: "Hi·ªÉu r√µ b·ªëi c·∫£nh v√† vƒÉn h√≥a" },
                    ].map((item, idx) => (
                      <div key={idx} className="flex items-start space-x-3">
                        <div className="w-2 h-2 bg-green-500 rounded-full mt-2"></div>
                        <div>
                          <span className="font-medium text-gray-900">{item.title}</span>
                          <p className="text-sm text-gray-600">{item.desc}</p>
                        </div>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>

              {/* AI Content */}
              <Card className="border-2 border-orange-200 shadow-lg">
                <CardHeader className="bg-gradient-to-r from-orange-100 to-red-100 text-center">
                  <div className="w-20 h-20 bg-orange-500 rounded-full flex items-center justify-center mx-auto mb-4">
                    <Bot className="h-10 w-10 text-white" />
                  </div>
                  <CardTitle className="text-2xl text-orange-800">AI GENERATED</CardTitle>
                  <p className="text-orange-600">N·ªôi dung do AI t·∫°o ra</p>
                </CardHeader>
                <CardContent className="p-6">
                  <div className="space-y-4">
                    {[
                      { title: "C·∫£m x√∫c gi·∫£ t·∫°o", desc: "C·∫£m x√∫c c√≥ v·∫ª ƒë∆∞·ª£c l·∫≠p tr√¨nh" },
                      { title: "Th√¥ng tin chung chung", desc: "Thi·∫øu chi ti·∫øt c√° nh√¢n c·ª• th·ªÉ" },
                      { title: "Qu√° ho√†n h·∫£o", desc: "Ng·ªØ ph√°p v√† c·∫•u tr√∫c qu√° chu·∫©n" },
                      { title: "Nh·∫£y topic ƒë·ªôt ng·ªôt", desc: "Chuy·ªÉn ƒë·ªÅ kh√¥ng m·∫°ch l·∫°c" },
                      { title: "Pattern l·∫∑p l·∫°i", desc: "C·∫•u tr√∫c c√¢u c√≥ xu h∆∞·ªõng l·∫∑p" },
                    ].map((item, idx) => (
                      <div key={idx} className="flex items-start space-x-3">
                        <div className="w-2 h-2 bg-orange-500 rounded-full mt-2"></div>
                        <div>
                          <span className="font-medium text-gray-900">{item.title}</span>
                          <p className="text-sm text-gray-600">{item.desc}</p>
                        </div>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            </div>

            {/* Quick Detection Tips */}
            <div className="mt-12">
              <Card className="bg-gradient-to-r from-blue-50 to-purple-50 border-2 border-blue-200 shadow-lg">
                <CardContent className="p-8 text-center">
                  <h3 className="text-2xl font-bold text-gray-900 mb-6">üîç M·∫πo Nh·∫≠n Bi·∫øt Nhanh</h3>
                  <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                    {[
                      { icon: Eye, title: "ƒê·ªçc k·ªπ to√†n b·ªô", desc: "Ch√∫ √Ω pattern v√† c·∫•u tr√∫c", color: "blue" },
                      { icon: Brain, title: "D√πng common sense", desc: "C·∫£m nh·∫≠n t·ª± nhi√™n hay gi·∫£ t·∫°o", color: "purple" },
                      { icon: Search, title: "Cross-check", desc: "Ki·ªÉm tra v·ªõi ngu·ªìn kh√°c", color: "green" },
                    ].map((tip, idx) => (
                      <div key={idx} className="flex flex-col items-center">
                        <div className={`w-12 h-12 bg-${tip.color}-100 rounded-full flex items-center justify-center mb-3`}>
                          <tip.icon className={`h-6 w-6 text-${tip.color}-600`} />
                        </div>
                        <span className="font-medium text-gray-900">{tip.title}</span>
                        <p className="text-sm text-gray-600 mt-1">{tip.desc}</p>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
        </section>

        {/* CTA Section */}
        <section className="py-16 bg-gradient-to-r from-blue-600 to-purple-600 text-white">
          <div className="container mx-auto max-w-4xl px-4 text-center">
            <div className="mb-8">
              <Sparkles className="w-16 h-16 mx-auto text-cyan-300 animate-pulse" />
            </div>
            <h2 className="text-3xl md:text-4xl font-bold mb-6">
              S·∫µn S√†ng S·ª≠ D·ª•ng AI An To√†n?
            </h2>
            <p className="text-xl mb-8 opacity-90 max-w-2xl mx-auto">
              AI l√† c√¥ng c·ª• m·∫°nh m·∫Ω - h√£y s·ª≠ d·ª•ng m·ªôt c√°ch th√¥ng minh, c√≥ tr√°ch nhi·ªám v√† an to√†n
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button
                size="lg"
                className="bg-white text-blue-600 hover:bg-gray-100 font-bold py-4 px-8 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300"
              >
                <Bot className="w-5 h-5 mr-2" />
                B·∫Øt ƒê·∫ßu H·ªçc AI
              </Button>
              <Button
                size="lg"
                onClick={() => setShowAIToolsModal(true)}
                className="bg-gradient-to-r from-cyan-500 to-blue-500 hover:from-cyan-600 hover:to-blue-600 text-white font-bold py-4 px-8 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300"
              >
                <Lightbulb className="w-5 h-5 mr-2" />
                50+ C√¥ng C·ª• AI Th·∫≠t S·ª±
              </Button>
            </div>
          </div>
        </section>

        {/* AI Tools Modal */}
        {showAIToolsModal && (
          <div className="fixed inset-0 bg-black/50 z-50 flex items-center justify-center p-4">
            <div className="bg-white rounded-3xl max-w-6xl w-full max-h-[90vh] overflow-hidden shadow-2xl">
              {/* Header */}
              <div className="bg-gradient-to-r from-blue-600 to-purple-600 text-white p-6 flex items-center justify-between">
                <div>
                  <h2 className="text-2xl font-bold mb-2">ü§ñ B·ªô S∆∞u T·∫≠p AI Tools Chuy√™n Nghi·ªáp</h2>
                  <p className="opacity-90">40+ c√¥ng c·ª• AI ÔøΩÔøΩ∆∞·ª£c ch·ªçn l·ªçc k·ªπ c√†ng cho t·ª´ng m·ª•c ƒë√≠ch s·ª≠ d·ª•ng c·ª• th·ªÉ</p>
                </div>
                <Button
                  onClick={() => setShowAIToolsModal(false)}
                  variant="ghost"
                  className="text-white hover:bg-white/10 p-2 rounded-full"
                >
                  <XCircle className="w-6 h-6" />
                </Button>
              </div>

              {/* Content */}
              <div className="p-6 overflow-y-auto max-h-[calc(90vh-120px)]">
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                  {Object.entries(aiTools).map(([category, tools], categoryIndex) => (
                    <Card key={category} className="h-fit">
                      <CardHeader className={`pb-4 ${
                        categoryIndex === 0 ? 'bg-gradient-to-r from-red-50 to-pink-50' :
                        categoryIndex === 1 ? 'bg-gradient-to-r from-purple-50 to-indigo-50' :
                        categoryIndex === 2 ? 'bg-gradient-to-r from-green-50 to-emerald-50' :
                        categoryIndex === 3 ? 'bg-gradient-to-r from-blue-50 to-cyan-50' :
                        categoryIndex === 4 ? 'bg-gradient-to-r from-orange-50 to-yellow-50' :
                        'bg-gradient-to-r from-gray-50 to-slate-50'
                      }`}>
                        <CardTitle className={`text-lg flex items-center gap-2 ${
                          categoryIndex === 0 ? 'text-red-700' :
                          categoryIndex === 1 ? 'text-purple-700' :
                          categoryIndex === 2 ? 'text-green-700' :
                          categoryIndex === 3 ? 'text-blue-700' :
                          categoryIndex === 4 ? 'text-orange-700' :
                          'text-gray-700'
                        }`}>
                          {category}
                          <Badge variant="secondary" className="text-xs">
                            {tools.length}
                          </Badge>
                        </CardTitle>
                      </CardHeader>
                      <CardContent className="pt-0">
                        <div className="grid grid-cols-1 gap-2">
                          {tools.map((tool, index) => (
                            <div
                              key={index}
                              className={`p-3 rounded-lg border hover:shadow-md transition-all duration-200 cursor-pointer ${
                                categoryIndex === 0 ? 'border-red-200 hover:border-red-300 hover:bg-red-50' :
                                categoryIndex === 1 ? 'border-purple-200 hover:border-purple-300 hover:bg-purple-50' :
                                categoryIndex === 2 ? 'border-green-200 hover:border-green-300 hover:bg-green-50' :
                                categoryIndex === 3 ? 'border-blue-200 hover:border-blue-300 hover:bg-blue-50' :
                                categoryIndex === 4 ? 'border-orange-200 hover:border-orange-300 hover:bg-orange-50' :
                                'border-gray-200 hover:border-gray-300 hover:bg-gray-50'
                              }`}
                            >
                              <div className="flex items-center justify-between">
                                <span className="font-medium text-gray-900 text-sm">{tool}</span>
                                <div className={`w-2 h-2 rounded-full ${
                                  categoryIndex === 0 ? 'bg-red-400' :
                                  categoryIndex === 1 ? 'bg-purple-400' :
                                  categoryIndex === 2 ? 'bg-green-400' :
                                  categoryIndex === 3 ? 'bg-blue-400' :
                                  categoryIndex === 4 ? 'bg-orange-400' :
                                  'bg-gray-400'
                                }`}></div>
                              </div>
                            </div>
                          ))}
                        </div>
                      </CardContent>
                    </Card>
                  ))}
                </div>

                {/* Footer note */}
                <div className="mt-8 p-4 bg-gradient-to-r from-blue-50 to-purple-50 rounded-2xl border border-blue-200">
                  <div className="text-center">
                    <p className="text-blue-800 font-medium mb-2">üí° L∆∞u √Ω quan tr·ªçng</p>
                    <p className="text-blue-700 text-sm leading-relaxed">
                      Danh s√°ch ƒë∆∞·ª£c c·∫≠p nh·∫≠t th∆∞·ªùng xuy√™n. H√£y lu√¥n ƒë√°nh gi√° k·ªπ v√† s·ª≠ d·ª•ng c√°c c√¥ng c·ª• AI m·ªôt c√°ch c√≥ tr√°ch nhi·ªám.
                      ƒê·ªçc k·ªπ ƒëi·ªÅu kho·∫£n s·ª≠ d·ª•ng tr∆∞·ªõc khi ƒëƒÉng k√Ω t√†i kho·∫£n.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>

      {/* Mobile version - Simple clean design */}
      <div className="md:hidden min-h-screen bg-blue-50">
        {/* Mobile Hero */}
        <section className="bg-gradient-to-br from-blue-500 to-purple-600 px-4 py-6 text-white">
          <div className="max-w-sm mx-auto text-center">
            <div className="w-16 h-16 mx-auto bg-white/20 rounded-full flex items-center justify-center mb-3">
              <Bot className="w-8 h-8 text-white" />
            </div>
            <h1 className="text-xl font-bold mb-1">ü§ñ AI An To√†n</h1>
            <p className="text-blue-100 text-sm mb-5">S·ª≠ d·ª•ng AI th√¥ng minh & c√≥ tr√°ch nhi·ªám</p>
            <div className="grid grid-cols-3 gap-3 text-center">
              <div className="bg-white/20 rounded-lg p-2.5">
                <div className="font-bold text-base">4.2B</div>
                <div className="text-xs text-blue-100">ng∆∞·ªùi d√πng</div>
              </div>
              <div className="bg-white/20 rounded-lg p-2.5">
                <div className="font-bold text-base">6 lo·∫°i</div>
                <div className="text-xs text-blue-100">AI ph·ªï bi·∫øn</div>
              </div>
              <div className="bg-white/20 rounded-lg p-2.5">
                <div className="font-bold text-base">40+</div>
                <div className="text-xs text-blue-100">c√¥ng c·ª•</div>
              </div>
            </div>
          </div>
        </section>

        {/* Mobile Content */}
        <section className="px-4 py-8">
          <div className="max-w-sm mx-auto">
            <h2 className="text-base font-bold text-gray-900 mb-2 text-center">
              üöÄ ·ª®ng d·ª•ng AI ph·ªï bi·∫øn
            </h2>
            <p className="text-gray-600 text-xs mb-6 text-center">
              Ch·∫°m ƒë·ªÉ xem chi ti·∫øt t·ª´ng lo·∫°i AI
            </p>

            <div className="space-y-3">
              {aiApplications.map((app) => (
                <Card key={app.id} className="bg-white border border-blue-200 shadow-sm">
                  <CardContent className="p-3">
                    <div className="flex items-start gap-3">
                      <div className={`w-9 h-9 rounded-lg ${app.bg} flex items-center justify-center flex-shrink-0`}>
                        <app.icon className={`w-4 h-4 ${app.color}`} />
                      </div>
                      <div className="flex-1 min-w-0">
                        <h3 className="font-semibold text-gray-900 text-sm mb-1">{app.title}</h3>
                        <p className="text-gray-600 text-xs mb-2">{app.description}</p>
                        <div className="flex items-center justify-between text-xs">
                          <span className="text-blue-600 font-medium">üìà {app.popularity}</span>
                          <span className="text-green-600 font-medium">üõ°Ô∏è {app.safety}</span>
                        </div>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        </section>

        {/* Mobile Quick Tips */}
        <section className="px-4 py-6 bg-gray-50">
          <div className="max-w-sm mx-auto">
            <h2 className="text-base font-bold text-center text-gray-900 mb-4">üí° M·∫πo s·ª≠ d·ª•ng AI an to√†n</h2>
            <div className="space-y-2">
              {[
                "‚úÖ Lu√¥n ki·ªÉm tra th√¥ng tin t·ª´ AI",
                "‚ùå Kh√¥ng copy nguy√™n vƒÉn b√†i AI",
                "üîç So s√°nh nhi·ªÅu ngu·ªìn th√¥ng tin",
                "üõ°Ô∏è Kh√¥ng chia s·∫ª d·ªØ li·ªáu nh·∫°y c·∫£m",
                "üéØ S·ª≠ d·ª•ng AI nh∆∞ c√¥ng c·ª• h·ªó tr·ª£",
              ].map((tip, idx) => (
                <Card key={idx} className="bg-white border border-gray-200">
                  <CardContent className="p-2.5">
                    <p className="text-sm text-gray-700">{tip}</p>
                  </CardContent>
                </Card>
              ))}
            </div>

            {/* Mobile AI Tools Button */}
            <div className="mt-6">
              <Button
                onClick={() => setShowAIToolsModal(true)}
                className="w-full bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 text-white font-bold py-3 px-6 rounded-2xl shadow-lg"
              >
                <Lightbulb className="w-4 h-4 mr-2" />
                üîç Kh√°m Ph√° AI Tools
              </Button>
            </div>
          </div>
        </section>
      </div>
    </div>
  );
}
